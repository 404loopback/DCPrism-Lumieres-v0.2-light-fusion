# =====================================
# DCPrism - Production Docker Compose
# Configuration de production basée sur le fichier principal
# =====================================

# Inclusion des modules Docker applications
include:
  - lumiere/infra/docker/fresnel/docker-compose.yml
  - lumiere/infra/docker/meniscus/docker-compose.yml
  # PAS de development tools en production

services:
  # =====================================
  # SHARED INFRASTRUCTURE (PRODUCTION)
  # =====================================
  mariadb:
    image: 'mariadb:11'
    container_name: lumieres-mariadb-prod
    restart: unless-stopped
    # PAS de port exposé en production pour sécurité
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
    volumes:
      - 'mariadb-prod-data:/var/lib/mysql'
      - './lumiere/infra/docker/mariadb/init-databases.sql:/docker-entrypoint-initdb.d/01-init-databases.sql'
    networks:
      - lumieres-network
    healthcheck:
      test:
        - CMD
        - healthcheck.sh
        - '--connect'
        - '--innodb_initialized'
      retries: 3
      timeout: 5s

  redis:
    image: 'redis:7.2-alpine'
    container_name: lumieres-redis-prod
    restart: unless-stopped
    # PAS de port exposé en production pour sécurité
    command: 'redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes'
    volumes:
      - 'redis-prod-data:/data'
    networks:
      - lumieres-network

  # =====================================
  # TRAEFIK REVERSE PROXY (PRODUCTION)
  # =====================================
  traefik:
    image: traefik:v3.0
    container_name: lumieres-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./lumiere/infra/docker/traefik/traefik-prod.yml:/etc/traefik/traefik.yml:ro
      - traefik-data:/data
    networks:
      - lumieres-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_AUTH}"

  # =====================================
  # INFRASTRUCTURE TOOLS (PRODUCTION)
  # =====================================
  opentofu:
    build:
      context: ./lumiere/infra/docker/opentofu
      dockerfile: Dockerfile
    container_name: dcprism-opentofu-prod
    working_dir: /workspace
    environment:
      - TF_DATA_DIR=/workspace/.terraform
      - TF_PLUGIN_CACHE_DIR=/home/opentofu/.terraform.d/plugin-cache
      - TF_LOG=ERROR  # Moins de logs en prod
    volumes:
      - ./lumiere/infra/terraform:/workspace/terraform:rw
      - ./lumiere/infra/docker/opentofu/tofu.rc:/home/opentofu/.tofurc:ro
      - opentofu-prod-cache:/home/opentofu/.terraform.d/plugin-cache
      - opentofu-prod-data:/workspace/.terraform
    networks:
      - lumieres-network
    restart: unless-stopped
    profiles:
      - infrastructure
      - tools
      - prod

  ansible:
    build:
      context: ./lumiere/infra/docker/ansible
      dockerfile: Dockerfile
    container_name: dcprism-ansible-prod
    working_dir: /ansible
    environment:
      - ANSIBLE_HOST_KEY_CHECKING=False
      - ANSIBLE_STDOUT_CALLBACK=yaml
      # Pas de profile_tasks en prod pour performance
    volumes:
      - ./lumiere/infra/ansible:/ansible:rw
      - ./lumiere/infra/docker/ansible/ansible.cfg:/ansible/ansible.cfg:ro
      - ./lumiere/infra/docker/ansible/inventory:/ansible/inventory:ro
      - ansible-prod-logs:/ansible/logs
      - ~/.ssh:/home/ansible/.ssh:ro
    networks:
      - lumieres-network
    restart: unless-stopped
    profiles:
      - infrastructure
      - tools
      - prod

  infisical:
    build:
      context: ./lumiere/infra/docker/infisical
      dockerfile: Dockerfile
    container_name: dcprism-infisical-prod
    working_dir: /app
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LOG_LEVEL=warn  # Moins de logs en prod
      - AUDIT_LOGS_ENABLED=true
      - SECRET_SCANNING_ENABLED=true
    # PAS de port exposé en production pour sécurité
    volumes:
      - ./lumiere/infra/secrets:/app/data:rw
      - ./lumiere/infra/docker/infisical/infisical.json:/app/config/infisical.json:ro
      - infisical-prod-logs:/app/logs
      - infisical-prod-config:/home/infisical/.infisical
    networks:
      - lumieres-network
    restart: unless-stopped
    profiles:
      - infrastructure
      - tools
      - security
      - prod

  # =====================================
  # APPLICATIONS PRODUCTION OVERRIDES
  # =====================================
  fresnel-app:
    container_name: dcprism-fresnel-app-prod
    environment:
      WWWUSER: '${WWWUSER:-1000}'
      APP_ENV: production
      APP_DEBUG: 'false'
      LOG_LEVEL: error
      DB_CONNECTION: mysql
      DB_HOST: mariadb
      DB_DATABASE: ${FRESNEL_DB_DATABASE}
      DB_USERNAME: ${FRESNEL_DB_USERNAME}
      DB_PASSWORD: ${FRESNEL_DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_CONNECTION: redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fresnel.rule=Host(`fresnel.${DOMAIN}`)"
      - "traefik.http.routers.fresnel.entrypoints=websecure"
      - "traefik.http.routers.fresnel.tls.certresolver=letsencrypt"
      - "traefik.http.services.fresnel.loadbalancer.server.port=80"
      - "traefik.http.routers.fresnel.middlewares=security-headers"
      - "traefik.http.middlewares.security-headers.headers.customResponseHeaders.X-Frame-Options=DENY"
      - "traefik.http.middlewares.security-headers.headers.customResponseHeaders.X-Content-Type-Options=nosniff"
      - "traefik.http.middlewares.security-headers.headers.customResponseHeaders.Strict-Transport-Security=max-age=31536000; includeSubDomains"

  meniscus-app:
    container_name: dcprism-meniscus-app-prod
    environment:
      WWWUSER: '${WWWUSER:-1000}'
      APP_ENV: production
      APP_DEBUG: 'false'
      LOG_LEVEL: error
      DB_CONNECTION: mysql
      DB_HOST: mariadb
      DB_DATABASE: ${MENISCUS_DB_DATABASE}
      DB_USERNAME: ${MENISCUS_DB_USERNAME}
      DB_PASSWORD: ${MENISCUS_DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_CONNECTION: redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.meniscus.rule=Host(`meniscus.${DOMAIN}`)"
      - "traefik.http.routers.meniscus.entrypoints=websecure"
      - "traefik.http.routers.meniscus.tls.certresolver=letsencrypt"
      - "traefik.http.services.meniscus.loadbalancer.server.port=80"
      - "traefik.http.routers.meniscus.middlewares=security-headers"
      - "traefik.http.middlewares.security-headers.headers.customResponseHeaders.X-Frame-Options=DENY"
      - "traefik.http.middlewares.security-headers.headers.customResponseHeaders.X-Content-Type-Options=nosniff"
      - "traefik.http.middlewares.security-headers.headers.customResponseHeaders.Strict-Transport-Security=max-age=31536000; includeSubDomains"

volumes:
  traefik-data:
    driver: local
  mariadb-prod-data:
    driver: local
  redis-prod-data:
    driver: local
  opentofu-prod-cache:
    driver: local
  opentofu-prod-data:
    driver: local
  ansible-prod-logs:
    driver: local
  infisical-prod-logs:
    driver: local
  infisical-prod-config:
    driver: local

networks:
  lumieres-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
          gateway: 172.30.0.1


