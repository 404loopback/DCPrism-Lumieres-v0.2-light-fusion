services:
  # =====================================
  # SHARED INFRASTRUCTURE ARCHITECTURE
  # =====================================
  mariadb:
    image: 'mariadb:11'
    container_name: lumieres-mariadb
    restart: unless-stopped
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: 'dcprism_root_password'
      MYSQL_ROOT_HOST: '%'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
    volumes:
      - 'mariadb-data:/var/lib/mysql'
      - './lumiere/infra/docker/mariadb/init-databases.sql:/docker-entrypoint-initdb.d/01-init-databases.sql'
    networks:
      - lumieres-network
    healthcheck:
      test:
        - CMD
        - healthcheck.sh
        - '--connect'
        - '--innodb_initialized'
      retries: 3
      timeout: 5s

  redis:
    image: 'redis:7.2-alpine'
    container_name: lumieres-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    command: 'redis-server --requirepass redis_password --appendonly yes'
    volumes:
      - 'redis-data:/data'
    networks:
      - lumieres-network

  # =====================================
  # TRAEFIK REVERSE PROXY
  # =====================================
  traefik:
    image: traefik:v3.0
    container_name: lumieres-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "8088:8080"  # Dashboard en dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${PWD}/lumiere/infra/docker/traefik/traefik-dev.yml:/etc/traefik/traefik.yml:ro
    networks:
      - lumieres-network
    profiles:
      - dev

  traefik-prod:
    image: traefik:v3.0
    container_name: lumieres-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${PWD}/lumiere/infra/docker/traefik/traefik-prod.yml:/etc/traefik/traefik.yml:ro
      - traefik-data:/data
    networks:
      - lumieres-network
    environment:
      - DOMAIN=${DOMAIN:-localhost}
      - TRAEFIK_AUTH=${TRAEFIK_AUTH}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_AUTH}"
    profiles:
      - prod

volumes:
  traefik-data:
    driver: local
  mariadb-data:
    driver: local
  redis-data:
    driver: local

# Le réseau sera défini dans le compose principal
