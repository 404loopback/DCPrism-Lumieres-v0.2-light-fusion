services:
  # MySQL Database (PORT 3307 - Décalé)
  dcparty-mysql:
    image: mysql:8.0
    container_name: dcparty_mysql
    environment:
      MYSQL_ROOT_PASSWORD: dcparty_root_password
      MYSQL_DATABASE: dcparty
      MYSQL_USER: dcparty
      MYSQL_PASSWORD: dcparty_password
    ports:
      - "3307:3306"  # PORT DÉCALÉ pour éviter conflit avec DCPrism (3306)
    volumes:
      - dcparty_mysql_data:/var/lib/mysql
    networks:
      - dcparty_network
    restart: unless-stopped

  # Redis Cache & Queue (PORT 6380 - Décalé)
  dcparty-redis:
    image: redis:7-alpine
    container_name: dcparty_redis
    ports:
      - "6380:6379"  # PORT DÉCALÉ pour éviter conflit avec DCPrism (6381)
    volumes:
      - dcparty_redis_data:/data
    networks:
      - dcparty_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Laravel Application (PORT 8002 - Décalé)
  dcparty-app:
    build:
      context: /home/inad/DCParty/laravel-app
      dockerfile: /home/inad/DCParty/docker/backend/Dockerfile
    container_name: dcparty_app
    working_dir: /var/www/html
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=dcparty-mysql
      - DB_PORT=3306
      - DB_DATABASE=dcparty
      - DB_USERNAME=dcparty
      - DB_PASSWORD=dcparty_password
      - REDIS_HOST=dcparty-redis
      - REDIS_PORT=6379
      - CACHE_DRIVER=redis
      - QUEUE_CONNECTION=redis
    ports:
      - "8002:8000"  # PORT DÉCALÉ pour éviter conflit avec DCPrism (8001)
    volumes:
      - /home/inad/DCParty/laravel-app:/var/www/html
      - /home/inad/DCParty/docker/backend/php.ini:/usr/local/etc/php/php.ini
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - dcparty-mysql
      - dcparty-redis
    networks:
      - dcparty_network
    restart: unless-stopped
    command: php artisan serve --host=0.0.0.0 --port=8000

  # Queue Worker
  dcparty-queue-worker:
    build:
      context: /home/inad/DCParty/laravel-app
      dockerfile: /home/inad/DCParty/docker/backend/Dockerfile
    container_name: dcparty_queue_worker
    working_dir: /var/www/html
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=dcparty-mysql
      - DB_PORT=3306
      - DB_DATABASE=dcparty
      - DB_USERNAME=dcparty
      - DB_PASSWORD=dcparty_password
      - REDIS_HOST=dcparty-redis
      - REDIS_PORT=6379
      - CACHE_DRIVER=redis
      - QUEUE_CONNECTION=redis
    volumes:
      - /home/inad/DCParty/laravel-app:/var/www/html
    depends_on:
      - dcparty-mysql
      - dcparty-redis
      - dcparty-app
    networks:
      - dcparty_network
    restart: unless-stopped
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600

  # MailHog Email Testing (PORT 8025 - Pas de conflit)
  dcparty-mailhog:
    image: mailhog/mailhog:latest
    container_name: dcparty_mailhog
    ports:
      - "1025:1025"  # SMTP - pas de conflit
      - "8025:8025"  # Web UI - pas de conflit avec DCPrism (8026)
    networks:
      - dcparty_network
    restart: unless-stopped

  # phpMyAdmin (PORT 8084 - Décalé) 
  dcparty-phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: dcparty_phpmyadmin
    environment:
      PMA_HOST: dcparty-mysql
      PMA_PORT: 3306
      PMA_USER: dcparty
      PMA_PASSWORD: dcparty_password
      MYSQL_ROOT_PASSWORD: dcparty_root_password
    ports:
      - "8084:80"  # PORT DÉCALÉ pour éviter conflit avec DCPrism (8082)
    depends_on:
      - dcparty-mysql
    networks:
      - dcparty_network
    restart: unless-stopped

  # Redis Commander (PORT 8085 - Décalé)
  dcparty-redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: dcparty_redis_commander
    environment:
      REDIS_HOSTS: local:dcparty-redis:6379
    ports:
      - "8085:8081"  # PORT DÉCALÉ pour éviter conflit avec DCPrism (8083)
    depends_on:
      - dcparty-redis
    networks:
      - dcparty_network
    restart: unless-stopped

  # OpenTofu Infrastructure Management
  dcparty-opentofu:
    build:
      context: /home/inad/DCParty/docker/terraform
      dockerfile: Dockerfile
    container_name: dcparty_opentofu
    working_dir: /terraform
    environment:
      - TF_VAR_project_name=dcparty
      - TF_VAR_environment=local
      - TF_IN_AUTOMATION=true
      - TF_INPUT=false
    volumes:
      - /home/inad/DCParty/terraform:/terraform/configs
      - dcparty_opentofu_state:/terraform/state
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - dcparty_network
    restart: unless-stopped
    stdin_open: true
    tty: true

  # Ansible Configuration Management
  dcparty-ansible:
    build:
      context: /home/inad/DCParty/docker/ansible
      dockerfile: Dockerfile
    container_name: dcparty_ansible
    working_dir: /ansible
    environment:
      - ANSIBLE_HOST_KEY_CHECKING=False
      - ANSIBLE_STDOUT_CALLBACK=yaml
      - ANSIBLE_TIMEOUT=30
      - PYTHONUNBUFFERED=1
    volumes:
      - /home/inad/DCParty/ansible:/ansible/playbooks
      - dcparty_ansible_data:/ansible/inventory
      - dcparty_ansible_roles:/ansible/roles
      - dcparty_ansible_collections:/ansible/collections
      - ~/.ssh:/root/.ssh:ro
    networks:
      - dcparty_network
    restart: unless-stopped
    stdin_open: true
    tty: true

volumes:
  dcparty_mysql_data:
    driver: local
  dcparty_redis_data:
    driver: local
  dcparty_opentofu_state:
    driver: local
  dcparty_ansible_data:
    driver: local
  dcparty_ansible_roles:
    driver: local
  dcparty_ansible_collections:
    driver: local

networks:
  dcparty_network:
    driver: bridge
