<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
use Illuminate\Support\Facades\DB;
use App\Models\Parameter;
use App\Models\Festival;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        // 1. Marquer certains paramètres comme système
        $systemParameters = [
            'title', 'year', 'language', 'resolution'
        ];

        foreach ($systemParameters as $paramName) {
            Parameter::where('name', $paramName)->update([
                'is_system' => true,
                'is_global' => true,
                'is_active' => true
            ]);
        }

        // 2. S'assurer que tous les paramètres existants sont marqués comme globaux par défaut
        Parameter::whereNull('is_global')->orWhere('is_global', false)
            ->update(['is_global' => true]);

        // 3. Migrer les associations existantes de la table nomenclatures vers festival_parameters
        $existingNomenclatures = DB::table('nomenclatures')
            ->join('parameters', 'nomenclatures.parameter_id', '=', 'parameters.id')
            ->join('festivals', 'nomenclatures.festival_id', '=', 'festivals.id')
            ->select(
                'nomenclatures.festival_id',
                'nomenclatures.parameter_id', 
                'nomenclatures.is_active as is_enabled',
                'nomenclatures.order_position as display_order',
                'nomenclatures.default_value as custom_default_value',
                'nomenclatures.formatting_rules as custom_formatting_rules',
                'nomenclatures.created_at',
                'nomenclatures.updated_at'
            )
            ->get();

        foreach ($existingNomenclatures as $nomenclature) {
            DB::table('festival_parameters')->insert([
                'festival_id' => $nomenclature->festival_id,
                'parameter_id' => $nomenclature->parameter_id,
                'is_enabled' => $nomenclature->is_enabled ?? true,
                'custom_default_value' => $nomenclature->custom_default_value,
                'custom_formatting_rules' => $nomenclature->custom_formatting_rules,
                'display_order' => $nomenclature->display_order,
                'festival_specific_notes' => null,
                'created_at' => $nomenclature->created_at ?? now(),
                'updated_at' => $nomenclature->updated_at ?? now(),
            ]);
        }

        // 4. Assigner automatiquement tous les paramètres système à tous les festivals existants
        $systemParams = Parameter::where('is_system', true)->where('is_active', true)->get();
        $festivals = Festival::where('is_active', true)->get();

        foreach ($festivals as $festival) {
            foreach ($systemParams as $param) {
                // Vérifier si l'association n'existe pas déjà
                $exists = DB::table('festival_parameters')
                    ->where('festival_id', $festival->id)
                    ->where('parameter_id', $param->id)
                    ->exists();

                if (!$exists) {
                    DB::table('festival_parameters')->insert([
                        'festival_id' => $festival->id,
                        'parameter_id' => $param->id,
                        'is_enabled' => true,
                        'display_order' => $param->sort_order ?? 0,
                        'created_at' => now(),
                        'updated_at' => now(),
                    ]);
                }
            }
        }
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        // Restaurer les flags
        Parameter::update([
            'is_system' => false,
            'is_global' => true
        ]);

        // Vider la table festival_parameters (les données seront perdues)
        DB::table('festival_parameters')->truncate();
    }
};
