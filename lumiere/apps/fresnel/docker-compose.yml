services:
    # Application Laravel avec Sail
    laravel.test:
        build:
            context: .
            dockerfile: docker/app/Dockerfile
            target: development
        image: dcprism-sail-app:app
        container_name: dcprism-app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-8001}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www'
        networks:
            - dcprism-network
        depends_on:
            - mariadb
            - redis
            - mailpit
    mariadb:
        image: 'mariadb:11'
        container_name: dcprism-mariadb
        restart: unless-stopped
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'sail-mariadb:/var/lib/mysql'
            - './vendor/laravel/sail/database/mariadb/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - dcprism-network
        healthcheck:
            test:
                - CMD
                - healthcheck.sh
                - '--connect'
                - '--innodb_initialized'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:7.2-alpine'
        container_name: dcprism-redis
        restart: unless-stopped
        ports:
            - '6381:6379'
        command: 'redis-server --requirepass redis_password --appendonly yes'
        volumes:
            - 'redis-data:/data'
        networks:
            - dcprism-network
    # Worker pour les queues Laravel
    worker:
        build:
            context: .
            dockerfile: docker/app/Dockerfile
            target: development
        image: dcprism-sail-app:worker
        container_name: dcprism-worker
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
        volumes:
            - '.:/var/www'
        networks:
            - dcprism-network
        depends_on:
            - mariadb
            - redis
        command: php artisan queue:work --sleep=3 --tries=3 --timeout=90
    # Scheduler pour les t√¢ches cron Laravel
    scheduler:
        build:
            context: .
            dockerfile: docker/app/Dockerfile
            target: development
        image: dcprism-sail-app:scheduler
        container_name: dcprism-scheduler
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
        volumes:
            - '.:/var/www'
        networks:
            - dcprism-network
        depends_on:
            - mariadb
            - redis
        command: php artisan schedule:work
    mailpit:
        image: 'axllent/mailpit:latest'
        container_name: dcprism-mailpit
        restart: unless-stopped
        ports:
            - '1026:1025'  # SMTP port
            - '8026:8025'  # Web UI port
        networks:
            - dcprism-network
    adminer:
        image: 'adminer:4.8.1'
        container_name: dcprism-adminer
        restart: unless-stopped
        ports:
            - '8082:8080'
        environment:
            - ADMINER_DEFAULT_SERVER=mariadb
        depends_on:
            - mariadb
        networks:
            - dcprism-network
    redis-commander:
        image: 'rediscommander/redis-commander:latest'
        container_name: dcprism-redis-commander
        restart: unless-stopped
        ports:
            - '8083:8081'
        environment:
            - 'REDIS_HOSTS=redis:redis:6379:0:redis_password'
        depends_on:
            - redis
        networks:
            - dcprism-network
    nginx-lb:
        image: 'nginx:alpine'
        container_name: dcprism-nginx-lb
        restart: unless-stopped
        ports:
            - '8080:80'
            - '8443:443'
        volumes:
            - './docker/nginx/load-balancer.conf:/etc/nginx/nginx.conf:ro'
            - './docker/ssl:/etc/nginx/ssl:ro'
        depends_on:
            - laravel.test
        networks:
            - dcprism-network
        profiles:
            - production
volumes:
    sail-mariadb:
        driver: local
    redis-data:
        driver: local
networks:
    dcprism-network:
        driver: bridge
        ipam:
            config:
                - subnet: 172.25.0.0/16
                  gateway: 172.25.0.1
